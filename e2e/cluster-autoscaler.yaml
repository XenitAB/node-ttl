apiVersion: v1
kind: Namespace
metadata:
  name: cluster-autoscaler
---
# Source: cluster-autoscaler/templates/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/instance: "cluster-autoscaler"
    app.kubernetes.io/name: "kubemark-cluster-autoscaler"
    app.kubernetes.io/managed-by: "Helm"
    helm.sh/chart: "cluster-autoscaler-9.19.2"
  name: cluster-autoscaler-kubemark-cluster-autoscaler
  namespace: cluster-autoscaler
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: "cluster-autoscaler"
      app.kubernetes.io/name: "kubemark-cluster-autoscaler"
  
  maxUnavailable: 1
---
# Source: cluster-autoscaler/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: "cluster-autoscaler"
    app.kubernetes.io/name: "kubemark-cluster-autoscaler"
    app.kubernetes.io/managed-by: "Helm"
    helm.sh/chart: "cluster-autoscaler-9.19.2"
  name: cluster-autoscaler-kubemark-cluster-autoscaler
  namespace: cluster-autoscaler
automountServiceAccountToken: true
---
# Source: cluster-autoscaler/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: "cluster-autoscaler"
    app.kubernetes.io/name: "kubemark-cluster-autoscaler"
    app.kubernetes.io/managed-by: "Helm"
    helm.sh/chart: "cluster-autoscaler-9.19.2"
  name: cluster-autoscaler-kubemark-cluster-autoscaler
rules:
  - apiGroups:
      - ""
    resources:
      - events
      - endpoints
    verbs:
      - create
      - patch
  - apiGroups:
    - ""
    resources:
    - pods/eviction
    verbs:
    - create
  - apiGroups:
      - ""
    resources:
      - pods/status
    verbs:
      - update
  - apiGroups:
      - ""
    resources:
      - endpoints
    resourceNames:
      - cluster-autoscaler
    verbs:
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
    - watch
    - list
    - get
    - update
  - apiGroups:
    - ""
    resources:
      - namespaces
      - pods
      - services
      - replicationcontrollers
      - persistentvolumeclaims
      - persistentvolumes
    verbs:
      - watch
      - list
      - get
  - apiGroups:
    - batch
    resources:
      - jobs
      - cronjobs
    verbs:
      - watch
      - list
      - get
  - apiGroups:
    - batch
    - extensions
    resources:
    - jobs
    verbs:
    - get
    - list
    - patch
    - watch
  - apiGroups:
      - extensions
    resources:
      - replicasets
      - daemonsets
    verbs:
      - watch
      - list
      - get
  - apiGroups:
      - policy
    resources:
      - poddisruptionbudgets
    verbs:
      - watch
      - list
  - apiGroups:
    - apps
    resources:
    - daemonsets
    - replicasets
    - statefulsets
    verbs:
    - watch
    - list
    - get
  - apiGroups:
    - storage.k8s.io
    resources:
    - storageclasses
    - csinodes
    - csidrivers
    - csistoragecapacities
    verbs:
    - watch
    - list
    - get
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - list
      - watch
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - create
  - apiGroups:
    - coordination.k8s.io
    resourceNames:
    - cluster-autoscaler
    resources:
    - leases
    verbs:
    - get
    - update
  
  # Additional permission required by kubemark controller
  - apiGroups:
      - ""
    resources:
      - replicationcontrollers
    verbs:
      - create
      - delete
  - apiGroups:
    - ""
    resources:
      - nodes
    verbs:
      - delete
---
# Source: cluster-autoscaler/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: "cluster-autoscaler"
    app.kubernetes.io/name: "kubemark-cluster-autoscaler"
    app.kubernetes.io/managed-by: "Helm"
    helm.sh/chart: "cluster-autoscaler-9.19.2"
  name: cluster-autoscaler-kubemark-cluster-autoscaler
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-autoscaler-kubemark-cluster-autoscaler
subjects:
  - kind: ServiceAccount
    name: cluster-autoscaler-kubemark-cluster-autoscaler
    namespace: cluster-autoscaler
---
# Source: cluster-autoscaler/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/instance: "cluster-autoscaler"
    app.kubernetes.io/name: "kubemark-cluster-autoscaler"
    app.kubernetes.io/managed-by: "Helm"
    helm.sh/chart: "cluster-autoscaler-9.19.2"
  name: cluster-autoscaler-kubemark-cluster-autoscaler
  namespace: cluster-autoscaler
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - configmaps
    resourceNames:
      - cluster-autoscaler-status
    verbs:
      - delete
      - get
      - update
---
# Source: cluster-autoscaler/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: "cluster-autoscaler"
    app.kubernetes.io/name: "kubemark-cluster-autoscaler"
    app.kubernetes.io/managed-by: "Helm"
    helm.sh/chart: "cluster-autoscaler-9.19.2"
  name: cluster-autoscaler-kubemark-cluster-autoscaler
  namespace: cluster-autoscaler
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cluster-autoscaler-kubemark-cluster-autoscaler
subjects:
  - kind: ServiceAccount
    name: cluster-autoscaler-kubemark-cluster-autoscaler
    namespace: cluster-autoscaler
---
# Source: cluster-autoscaler/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: "cluster-autoscaler"
    app.kubernetes.io/name: "kubemark-cluster-autoscaler"
    app.kubernetes.io/managed-by: "Helm"
    helm.sh/chart: "cluster-autoscaler-9.19.2"
  name: cluster-autoscaler-kubemark-cluster-autoscaler
  namespace: cluster-autoscaler
spec:
  ports:
    - port: 8085
      protocol: TCP
      targetPort: 8085
      name: http
  selector:
    app.kubernetes.io/instance: "cluster-autoscaler"
    app.kubernetes.io/name: "kubemark-cluster-autoscaler"
  type: "ClusterIP"
---
# Source: cluster-autoscaler/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    {}
  labels:
    app.kubernetes.io/instance: "cluster-autoscaler"
    app.kubernetes.io/name: "kubemark-cluster-autoscaler"
    app.kubernetes.io/managed-by: "Helm"
    helm.sh/chart: "cluster-autoscaler-9.19.2"
  name: cluster-autoscaler-kubemark-cluster-autoscaler
  namespace: cluster-autoscaler
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: "cluster-autoscaler"
      app.kubernetes.io/name: "kubemark-cluster-autoscaler"
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: "cluster-autoscaler"
        app.kubernetes.io/name: "kubemark-cluster-autoscaler"
    spec:
      priorityClassName: "system-cluster-critical"
      dnsPolicy: "ClusterFirst"
      containers:
        - name: kubemark-cluster-autoscaler
          image: "ghcr.io/xenitab/cluster-autoscaler-kubemark:1.31.2"
          command:
            - ./cluster-autoscaler
            - --cloud-provider=kubemark
            - --namespace=cluster-autoscaler
            - --nodes=1:10:asg1
            - --logtostderr=true
            - --scale-down-delay-after-add=10s
            - --scale-down-delay-after-delete=10s
            - --scale-down-delay-after-failure=10s
            - --scale-down-enabled=true
            - --scale-down-unneeded-time=10s
            - --scan-interval=10s
            - --skip-nodes-with-local-storage=false
            - --skip-nodes-with-system-pods=false
            - --status-config-map-name=cluster-autoscaler-status
            - --stderrthreshold=info
            - --v=4
            - --write-status-configmap=true
          env:
          livenessProbe:
            httpGet:
              path: /health-check
              port: 8085
          ports:
            - containerPort: 8085
          resources:
            {}
      serviceAccountName: cluster-autoscaler-kubemark-cluster-autoscaler
      tolerations:
        []
